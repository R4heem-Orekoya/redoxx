/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Blog = {
  _id: string;
  _type: "blog";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  excerpt?: string;
  datePublished?: string;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  slug?: Slug;
  tags?: Array<string>;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & Code | {
    _key: string;
  } & Youtube | {
    _key: string;
  } & CustomTable>;
};

export type Youtube = {
  _type: "youtube";
  title?: string;
  url?: string;
};

export type CustomTable = {
  _type: "customTable";
  table?: Table;
  caption?: string;
};

export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  projectLogo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  githubLink?: string;
  siteLink?: string;
  excerpt?: string;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  slug?: Slug;
  techStack?: Array<{
    _key: string;
  } & TechStack>;
  tags?: Array<string>;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & Code | {
    _key: string;
  } & Youtube | {
    _key: string;
  } & CustomTable>;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type TechStack = {
  _type: "techStack";
  name?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  caption?: string;
  alt?: string;
  _type: "image";
  _key: string;
} | {
  _key: string;
} & Code | {
  _key: string;
} & Youtube | {
  _key: string;
} & CustomTable>;

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Table = {
  _type: "table";
  rows?: Array<{
    _key: string;
  } & TableRow>;
};

export type TableRow = {
  _type: "tableRow";
  cells?: Array<string>;
};

export type Code = {
  _type: "code";
  language?: string;
  filename?: string;
  code?: string;
  highlightedLines?: Array<number>;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | Blog | Youtube | CustomTable | Project | Slug | TechStack | BlockContent | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Table | TableRow | Code;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: projectsQuery
// Query: *[_type == "project"]{  _id, title, slug, projectLogo,   githubLink, siteLink, excerpt,   thumbnail {    asset->{      url,      metadata {        lqip      }    }  }, techStack, description}
export type ProjectsQueryResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  projectLogo: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  githubLink: string | null;
  siteLink: string | null;
  excerpt: string | null;
  thumbnail: {
    asset: {
      url: string | null;
      metadata: {
        lqip: string | null;
      } | null;
    } | null;
  } | null;
  techStack: Array<{
    _key: string;
  } & TechStack> | null;
  description: Array<{
    _key: string;
  } & Code | {
    _key: string;
  } & CustomTable | {
    _key: string;
  } & Youtube | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
}>;
// Variable: blogsQuery
// Query: *[_type == "blog"] | order(datePublished desc) {  _id,  title,  excerpt,  datePublished,  thumbnail {      asset->{        url,        metadata {          lqip        }      }  },  slug,  content}
export type BlogsQueryResult = Array<{
  _id: string;
  title: string | null;
  excerpt: string | null;
  datePublished: string | null;
  thumbnail: {
    asset: {
      url: string | null;
      metadata: {
        lqip: string | null;
      } | null;
    } | null;
  } | null;
  slug: Slug | null;
  content: Array<{
    _key: string;
  } & Code | {
    _key: string;
  } & CustomTable | {
    _key: string;
  } & Youtube | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
}>;
// Variable: blogQuery
// Query: *[_type == "blog" && slug.current == $slug][0] {  _id,  title,  excerpt,  thumbnail {    asset->{      url,      metadata {        lqip      }    }  },  tags,  datePublished,  content}
export type BlogQueryResult = {
  _id: string;
  title: string | null;
  excerpt: string | null;
  thumbnail: {
    asset: {
      url: string | null;
      metadata: {
        lqip: string | null;
      } | null;
    } | null;
  } | null;
  tags: Array<string> | null;
  datePublished: string | null;
  content: Array<{
    _key: string;
  } & Code | {
    _key: string;
  } & CustomTable | {
    _key: string;
  } & Youtube | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
} | null;
// Variable: projectQuery
// Query: *[_type == "project" && slug.current == $slug] [0] {  _id,  title,  excerpt,  thumbnail {    asset->{      url,      metadata {        lqip      }    }  },  tags,  description,  techStack,  githubLink,  siteLink,}
export type ProjectQueryResult = {
  _id: string;
  title: string | null;
  excerpt: string | null;
  thumbnail: {
    asset: {
      url: string | null;
      metadata: {
        lqip: string | null;
      } | null;
    } | null;
  } | null;
  tags: Array<string> | null;
  description: Array<{
    _key: string;
  } & Code | {
    _key: string;
  } & CustomTable | {
    _key: string;
  } & Youtube | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  techStack: Array<{
    _key: string;
  } & TechStack> | null;
  githubLink: string | null;
  siteLink: string | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"project\"]{\n  _id, title, slug, projectLogo, \n  githubLink, siteLink, excerpt, \n  thumbnail {\n    asset->{\n      url,\n      metadata {\n        lqip\n      }\n    }\n  }, techStack, description\n}": ProjectsQueryResult;
    "*[_type == \"blog\"] | order(datePublished desc) {\n  _id,\n  title,\n  excerpt,\n  datePublished,\n  thumbnail {\n      asset->{\n        url,\n        metadata {\n          lqip\n        }\n      }\n  },\n  slug,\n  content\n}": BlogsQueryResult;
    "*[_type == \"blog\" && slug.current == $slug][0] {\n  _id,\n  title,\n  excerpt,\n  thumbnail {\n    asset->{\n      url,\n      metadata {\n        lqip\n      }\n    }\n  },\n  tags,\n  datePublished,\n  content\n}": BlogQueryResult;
    "*[_type == \"project\" && slug.current == $slug] [0] {\n  _id,\n  title,\n  excerpt,\n  thumbnail {\n    asset->{\n      url,\n      metadata {\n        lqip\n      }\n    }\n  },\n  tags,\n  description,\n  techStack,\n  githubLink,\n  siteLink,\n}": ProjectQueryResult;
  }
}
